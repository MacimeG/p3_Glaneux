body{
    margin: 0px;
    padding: 0px;
    font-family: 'Roboto', sans-serif;
}

/* Ici contient mon HEADER
j'y rajoute du style avec les propriétés font, texte-align et du display:flex */
nav{
    display: flex;
    justify-content: center;
}
.logo-header{
    width: 210px;
    padding-top: 20px;
    padding-bottom: 10px;
}
.recherche_ville{
    display: flex;
    flex-direction: row;
    align-items: baseline;
    justify-content: center;
    background-color: #EAEAEA;
    box-shadow: -6px 20px 18px -19px rgba(100,99,99,0.75) inset;
    
}
.recherche_ville .texte{
    font-weight: 600;
    color: #454545;
}
.recherche_ville .icon{
    padding-right: 15px;
    color: #454545;
}
.recherche_restau{
    background: linear-gradient(182deg,#fdfdfd 0%, #e6e6e6 70%);
    padding-bottom: 60px;
}

/* J'ai centrer le texte comme sur la maquette en ajouter la propriéte width:60% ainsi que la propriété margin: auto, pour pouvoir le centrer automatiquement */
.recherche_restau .texte{
    font-size: x-large; 
    font-weight: bold;
    text-align: center;
    width: 60%;
    margin: auto;
    padding-top: 35px;
}
.recherche_restau .bouton{
    display: flex;
    justify-content: center;
}
/* J'ai mis une taille et hauteur fixe en pixel sur le bouton
avec son style */
.bouton button{
    border: none;
    color: white;
    border-radius: 25px;
    width: 240px;
    font-size: 17px;
    height: 50px;
    box-shadow: 5px 6px 15px -2px rgba(0,0,0,0.26);
    background: linear-gradient(353deg,#9356dc 30%, #ff79da 80%);
    transition: .5s ease-out ;
    cursor: pointer;
}
/* ici je met une petite animation au survol du bouton, je l'eclaircis comme demandé et j'accentu l'ombre du bouton */
.bouton button:hover{
    background: linear-gradient(353deg,#9356dc 0%, #ff85dc 100%);
    box-shadow: 5px 6px 15px 11px rgba(0,0,0,0.26);
}
.recherche_restau .sousTexte{
    text-align: center;
    font-size: larger;
}




/* LE MAIN */

/* ET POUR COMMENCER, LA SECTION FONCTIONNEMENT */

.fonctionnement{
    padding-bottom: 60px;
    padding-top: 10px;
}
/* le text align center me sert a centrer le texte, le padding en dessous me sert pour le mettre a ras des boutons en dessous, et que sa puisse suivre responsivement */
.fonctionnement .texte{
    font-size: x-large; 
    font-weight: bold;
    text-align: center;
    padding-right: 190px;
}
.desktop{
    display: flex;
    flex-direction: column;
}
/* j'ai rajouter le line height au bouton , pour qu'il puisse bien s'aligné */
.fonctionnement button{
    width: 360px;
    height: 65px;
    border-radius: 15px;
    border: none;
    text-align: start;
    font-size: 14px;
    font-weight: 600;
    background-color: #f6f6f6;
    box-shadow: 5px 6px 15px -6px rgb(0 0 0 / 26%);
    line-height: 5;
    transition:  .5s ease-in-out;
}

/* ici je m'occupe de la petite animation sur les boutons de fonctionnement grace a la pseudoclass hover pour le survol et le focus qui remplace le clic */
.fonctionnement button:hover{
    background-color: #F5EDFF;
    cursor: pointer;
}
.fonctionnement button:focus{
    background-color: #F5EDFF;
}
/* ce petit bout de code me sert a faire changer la couleur de l'icon, dans le bouton */
.fonctionnement button:hover .icon_fonction{
    color: #9356DC;
}
.icon_fonction{
    padding-right: 20px;
    padding-left: 15px;
    color: #7E7E7E;
}

.fonction-item{
    width: max-content;
    margin: auto;
    margin-bottom: 20px;
    
}

/* j'ai rajouter le margin negatif, car pour l'instant je n'ai trouvé que cette solution pour rendre le même rendu que sur maquette */
.fonction-item .icon-number{
    border: 1px solid;
    padding: 5px 8px 5px 8px;
    border-radius: 70%;
    position: relative;
    background-color: #9356DC;
    color: white;
    margin-right: -15px;
}






/* ICI LA SECTION RESTAURANT ET CES CARD */
.restaurant{
    background-color: #f6f6f6;
    padding-top: 20px;
    padding-bottom: 30px;
}
/* ici je met le padding en % pour avoir le meme espace entre le bord et le commencement des card et tu titre restaurant, et que se soit responsive */
.restaurant .texte{
    font-size: x-large; 
    font-weight: bold;
    padding-left: 7%;
}

/* ici je donne une taille en pixell au card directement
j'ai remplacer les pixel par le % pour que responsivement, sa se comporte mieux. */
.restaurant-card{
    /* width: 350px; */
    width: 85%;
    background-color: white;
    margin: auto;
    border-radius: 15px;
    height: 260px;
    margin-bottom: 20px;
    box-shadow: 5px 6px 15px -10px rgb(0 0 0 / 26%);
}
a{
    color: black;
    text-decoration: none;
}
/* les images des card prenne 100% de la largueur de la card, et ce couvre la card grace a la propriété background-size: cover */
.img_main{
    background-size: cover;
    width: 100%;
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
    height: calc(100% - 75px);
    object-fit: cover;
}
.restaurant-name{
    font-size: larger;
    font-weight: bolder;
    margin: 0px;
    padding-top: 10px;
    padding-left: 10px;
}
.restaurant-lieu{
    margin: 0px;
    padding-top: 8px;
    padding-left: 10px;
}
.icon-heart{
    float: right;
    padding-right: 25px;
}

/* Animation pour le coeur partie restaurant la pseudoclass before fonctionne obligatoirement avec la propriété content, celle si peut rester vide. */
.fa-heart::before {
    content: "\f004";
    transition: color 500ms ease-in-out;
}
/* ici je rajoute la couleur grace a la pseudo class hover, le coeur se remplit grace a la propriété font-weight:bold */

.fa-heart:hover::before{
    /* color: rgb(147,86,220); */
    background: -webkit-linear-gradient(200deg,#9356dc 20%, #fc72d5 80%);
    -webkit-text-fill-color:transparent;
    -webkit-background-clip: text;
    background-clip: text;
    font-weight: bold;
    cursor: pointer;
}
.fa-heart:focus::before{
    /* color: rgb(147,86,220); */
    background: -webkit-linear-gradient(200deg,#9356dc 20%, #fc72d5 80%);
    -webkit-text-fill-color:transparent;
    -webkit-background-clip: text;
    background-clip: text;
    font-weight: bold;
    cursor: pointer;
}
/* ici j'ai jouer avec la propriété position et son attribut absolute, pour pouvoir placer le petit bloc "nouveau" sur la droite de la photo
un peu de padding (marge exterieure) pour bien placé l'element avec aussi du margin en %, pour le comportement des elements par rapport au differente taille d'écran */
.nouveaute{
    z-index: 2;
    position: absolute;
    border: 1px solid transparent;
    background-color: #99E2D0;
    color: #008766;
    padding: 6px;
    border-radius: 3px;
    font-weight: 600;
    padding-left: 15px;
    padding-right: 15px;
    right: 10%;
}
/* nouveauté 1 a les meme propriété que nouveauté, j'ai ajouté sa surtout pour la version desktop*/
.nouveaute1{
    z-index: 2;
    position: absolute;
    border: 1px solid transparent;
    background-color: #99E2D0;
    color: #008766;
    padding: 6px;
    border-radius: 3px;
    font-weight: 600;
    padding-left: 15px;
    padding-right: 15px;
    right: 10%;
}

/* ici Le FOOTER */

.title-footer{
    font-family: 'Shrikhand', cursive;
    font-size: 18px;
    /* padding-left: 20px; */
    padding-top: 20px;
    padding-bottom: 10px;
}

.footer-propose{
    display: flex;
    flex-direction: row;
    align-items: center;
    padding-bottom: 5px;
    color: white;
}
.footer-propose p{
    padding-left: 20px;
}

footer{
    background-color: #353535;
    padding-bottom: 25px;
    padding-left: 7%;
}
footer p{
    /* padding-left: 15px; */
    margin: 0;
    color: white;
    margin-bottom: 8px;
}

/* LE LOADER */
/* ici c'est plutot simple, je met un z index pour que le loader sois par dessus le site , je met une hauteur et une width ainsi que l'opacité a 0, c ce qui vas me servir a faire disparaitre completement le loader, pour animé le loader je me suis donc servis des keyframes , ainsi que des propriété transform et l'opacité bien sur */
.loader{
    background-color: white;
    position: absolute;
    z-index: 100;
    width: 100%;
    height: 900px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    
    /* ici je met mon animation, je rajoute la valeurs forwards qui laisse l'élement dans son état final lors de sa derniere iteration, cela veut dire que l'élement ne reviens pas a son état initial */
    animation: backloader linear forwards ;
    animation-duration: 3s;
    opacity: 0;
}
.loader img{
    animation: loader 1s linear;
    animation-duration: 3s;
}

/* ce keyframe me sers a faire partir vers le haut, la div qui contient le logo, et qui prend accessoirement toute la page. */
@keyframes backloader {
    0%{
        transform: translateY(0px) ;
        opacity: 1;
    }
    50%{
        transform: translateY(0px);
        opacity: 1;
    }
    100%{
        transform: translateY(-1000px);
        opacity: 0;
    }
}

/* ce keyframe me sert a faire grossir le logo pendant le temps de chargement */
@keyframes loader {
    0% {
        transform: scale(1);
    }
    50% {
       transform: scale(0.8);
    }
    100% {
       transform: scale(1);
    }
}